/****************************************************************************
**
** Namespace mccdll generated by dumpcpp v5.8.0 using
** dumpcpp.exe mccdll_V114_DEMO.dll
** from the type library mccdll_V114_DEMO.dll
**
****************************************************************************/

#ifndef QAX_DUMPCPP_MCCDLL_H
#define QAX_DUMPCPP_MCCDLL_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef MCCDLL_EXPORT
#define MCCDLL_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace mccdll {


class MCCDLL_EXPORT _MotionControlCard : public QAxObject
{
public:
    _MotionControlCard(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property AutoRunFlag
    */
    inline bool AutoRunFlag() const; //Returns the value of AutoRunFlag
    inline void SetAutoRunFlag(bool value); //Sets the value of the AutoRunFlag property

    /*
    Property ClosedControlA
    */
    inline bool ClosedControlA() const; //Returns the value of ClosedControlA
    inline void SetClosedControlA(bool value); //Sets the value of the ClosedControlA property

    /*
    Property ClosedControlFlag
    */
    inline bool ClosedControlFlag() const; //Returns the value of ClosedControlFlag
    inline void SetClosedControlFlag(bool value); //Sets the value of the ClosedControlFlag property

    /*
    Property ClosedControlX
    */
    inline bool ClosedControlX() const; //Returns the value of ClosedControlX
    inline void SetClosedControlX(bool value); //Sets the value of the ClosedControlX property

    /*
    Property ClosedControlY
    */
    inline bool ClosedControlY() const; //Returns the value of ClosedControlY
    inline void SetClosedControlY(bool value); //Sets the value of the ClosedControlY property

    /*
    Property ClosedControlZ
    */
    inline bool ClosedControlZ() const; //Returns the value of ClosedControlZ
    inline void SetClosedControlZ(bool value); //Sets the value of the ClosedControlZ property

    /*
    Property FeedBLnow
    */
    inline int FeedBLnow() const; //Returns the value of FeedBLnow
    inline void SetFeedBLnow(int value); //Sets the value of the FeedBLnow property

    /*
    Property FeedrateFlag
    */
    inline bool FeedrateFlag() const; //Returns the value of FeedrateFlag
    inline void SetFeedrateFlag(bool value); //Sets the value of the FeedrateFlag property

    /*
    Property IniPnowFlg
    */
    inline int IniPnowFlg() const; //Returns the value of IniPnowFlg
    inline void SetIniPnowFlg(int value); //Sets the value of the IniPnowFlg property

    /*
    Property StepStopFlag
    */
    inline bool StepStopFlag() const; //Returns the value of StepStopFlag
    inline void SetStepStopFlag(bool value); //Sets the value of the StepStopFlag property

    /*
    Property Version
    */
    inline QString Version() const; //Returns the value of Version
    inline void SetVersion(const QString& value); //Sets the value of the Version property

    /*
    Method CancelSpeedControl
    */
    inline void CancelSpeedControl(int AxisNum);

    /*
    Method ClearAutoText
    */
    inline void ClearAutoText();

    /*
    Method ClearBuffer
    */
    inline void ClearBuffer();

    /*
    Method GetActualF
    */
    inline int GetActualF(int Typ);

    /*
    Method GetActualMachineCoordinate
    */
    inline double GetActualMachineCoordinate(int Typ);

    /*
    Method GetCodeLength
    */
    inline int GetCodeLength();

    /*
    Method GetCodeRunNow
    */
    inline QString GetCodeRunNow();

    /*
    Method GetCodeRunNow
    */
    inline QString GetCodeRunNow(int& p);

    /*
    Method GetFvalue
    */
    inline int GetFvalue();

    /*
    Method GetFvalue
    */
    inline int GetFvalue(int& n);

    /*
    Method GetGmode
    */
    inline QString GetGmode(int n);

    /*
    Method GetIOin
    */
    inline int GetIOin(int num);

    /*
    Method GetIOout
    */
    inline int GetIOout(int num);

    /*
    Method GetMachineCoordinate
    */
    inline double GetMachineCoordinate(int Typ);

    /*
    Method GetMultiple
    */
    inline int GetMultiple(int Typ);

    /*
    Method GetParameterText
    */
    inline QString GetParameterText(int num);

    /*
    Method GetParameterValue
    */
    inline double GetParameterValue(int num);

    /*
    Method GetRefCoordinate
    */
    inline double GetRefCoordinate(int Typ);

    /*
    Method GetSpindleInformation
    */
    inline int GetSpindleInformation(int Typ);

    /*
    Method GetWorkMode
    */
    inline int GetWorkMode();

    /*
    Method GetWorkState
    */
    inline int GetWorkState();

    /*
    Method GetWorkpieceCoordinate
    */
    inline double GetWorkpieceCoordinate(int Typ);

    /*
    Method Ini_card
    */
    inline void Ini_card();

    /*
    Method Move_XY
    */
    inline void Move_XY(int axis, int valu);

    /*
    Method OpenProgram
    */
    inline void OpenProgram(QString& FileName);

    /*
    Method Open_ParaForm
    */
    inline void Open_ParaForm();

    /*
    Method Open_ParaForm
    */
    inline void Open_ParaForm(int n);

    /*
    Method SaveParameterValue
    */
    inline void SaveParameterValue();

    /*
    Method SendAutoText
    */
    inline void SendAutoText(QString& code);

    /*
    Method SendMDItext
    */
    inline void SendMDItext(QString& txt);

    /*
    Method SetFeedrateMultiple
    */
    inline void SetFeedrateMultiple(int Typ);

    /*
    Method SetIOout
    */
    inline void SetIOout(int num, int value);

    /*
    Method SetInitialPosition
    */
    inline void SetInitialPosition();

    /*
    Method SetParameter
    */
    inline void SetParameter(int num, double value, const QString& txt);

    /*
    Method SetParameterValue
    */
    inline void SetParameterValue(int num, double value);

    /*
    Method SetSeekZero
    */
    inline void SetSeekZero(int AxisNum);

    /*
    Method SetSeekZero
    */
    inline void SetSeekZero(int AxisNum, double& Baizhen);

    /*
    Method SetSpeedControl
    */
    inline void SetSpeedControl(int AxisNum, int Speed);

    /*
    Method SetSpindleMultiple
    */
    inline void SetSpindleMultiple(int Typ);

    /*
    Method SetSpindleRotate
    */
    inline void SetSpindleRotate(int SPR);

    /*
    Method SetStartline
    */
    inline void SetStartline(int& L);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT _Explain : public QAxObject
{
public:
    _Explain(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Fchflg
    */
    inline int Fchflg() const; //Returns the value of Fchflg
    inline void SetFchflg(int value); //Sets the value of the Fchflg property

    /*
    Property Fchflg2
    */
    inline int Fchflg2() const; //Returns the value of Fchflg2
    inline void SetFchflg2(int value); //Sets the value of the Fchflg2 property

    /*
    Property JumpFlg
    */
    inline int JumpFlg() const; //Returns the value of JumpFlg
    inline void SetJumpFlg(int value); //Sets the value of the JumpFlg property

    /*
    Property KongF
    */
    inline int KongF() const; //Returns the value of KongF
    inline void SetKongF(int value); //Sets the value of the KongF property

    /*
    Property VarChFlg
    */
    inline int VarChFlg() const; //Returns the value of VarChFlg
    inline void SetVarChFlg(int value); //Sets the value of the VarChFlg property

    /*
    Method Expl
    */
    inline void Expl();

    /*
    Method Explain
    */
    inline void Explain(double X, double Y, double Z, double a, double b, double c, double ox, double oy, double oz, double xend, double yend, double zend, double aend, double bend, double cend, double xr, double yr, double zr, double ar, double br, double cr, int Typ, int num, const QString& text, QStringList& mode, int CF, int af, int f0, int F1, int F2, int F3, int F4, int F5, int acc, double L, double Snow, double g68an, double G681, double G682, double Hbx, double Hby, double Hbz, double Db, double Ds, double Dan);

    /*
    Method Export
    */
    inline QVariant Export(int& M_EO_Type, int& M_EO_num, int& M_EO_F, int& M_EO_F0, int& M_EO_F1, int& M_EO_F2, int& M_EO_F3, int& M_EO_F4, int& M_EO_F5, double& M_EO_x0, double& M_EO_y0, double& M_EO_z0, double& M_EO_a0, double& M_EO_b0, double& M_EO_c0, double& M_EO_x1, double& M_EO_y1, double& M_EO_z1, double& M_EO_a1, double& M_EO_b1, double& M_EO_c1, double& M_EO_ox, double& M_EO_oy, double& M_EO_oz, double& M_EO_xr, double& M_EO_yr, double& M_EO_zr, double& M_EO_ar, double& M_EO_br, double& M_EO_cr, QString& M_EO_txt, QStringList& M_EO_mode1, double& M_EO_G6801, double& M_EO_G6802, double& M_EO_G68ang, double& M_EO_hbbz, double& M_EO_hbbx, double& M_EO_hbby, double& M_EO_dbb, double& M_EO_dss, double& M_EO_dann);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT _Interpolator : public QAxObject
{
public:
    _Interpolator(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property Acce
    */
    inline double Acce() const; //Returns the value of Acce
    inline void SetAcce(double value); //Sets the value of the Acce property

    /*
    Property CHxsh
    */
    inline double CHxsh() const; //Returns the value of CHxsh
    inline void SetCHxsh(double value); //Sets the value of the CHxsh property

    /*
    Property F_bl
    */
    inline int F_bl() const; //Returns the value of F_bl
    inline void SetF_bl(int value); //Sets the value of the F_bl property

    /*
    Property G0F_bl
    */
    inline int G0F_bl() const; //Returns the value of G0F_bl
    inline void SetG0F_bl(int value); //Sets the value of the G0F_bl property

    /*
    Property Jerk
    */
    inline double Jerk() const; //Returns the value of Jerk
    inline void SetJerk(double value); //Sets the value of the Jerk property

    /*
    Property PointNum
    */
    inline int PointNum() const; //Returns the value of PointNum
    inline void SetPointNum(int value); //Sets the value of the PointNum property

    /*
    Property SSegFlg
    */
    inline int SSegFlg() const; //Returns the value of SSegFlg
    inline void SetSSegFlg(int value); //Sets the value of the SSegFlg property

    /*
    Property SegEndnum
    */
    inline int SegEndnum() const; //Returns the value of SegEndnum
    inline void SetSegEndnum(int value); //Sets the value of the SegEndnum property

    /*
    Method Cal_arc
    */
    inline double Cal_arc(int M_CA_seg, int M_CA_typ, int M_CA_pla, double& M_CA_xp, double& M_CA_yp, double& M_CA_zp, double M_CA_x0, double M_CA_y0, double M_CA_z0, double M_CA_xx1, double M_CA_yy1, double M_CA_zz1, double M_CA_ox, double M_CA_oy, double M_CA_oz);

    /*
    Method Cal_cos
    */
    inline double Cal_cos(double& M_CC_xp, double& M_CC_yp, double& M_CC_zp, double& M_CC_ap, double& M_CC_bp, double& M_CC_cp, double M_CC_x1, double M_CC_y1, double M_CC_z1, double M_CC_a1, double M_CC_b1, double M_CC_c1, double x0, double y0, double z0, double a0, double b0, double c0);

    /*
    Method Cal_s
    */
    inline double Cal_s(int M_CS_i, double M_CS_vb, double M_CS_ve);

    /*
    Method Calculate
    */
    inline void Calculate();

    /*
    Method Interpolation
    */
    inline void Interpolation();

    /*
    Method Pretreat
    */
    inline void Pretreat();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT _Gincode : public QAxObject
{
public:
    _Gincode(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property length
    */
    inline int length() const; //Returns the value of length
    inline void setLength(int value); //Sets the value of the length property

    /*
    Method BaseCode
    */
    inline void BaseCode();

    /*
    Method DealM98
    */
    inline void DealM98(int num, int n0, int n1, int p);

    /*
    Method ExpOut
    */
    inline QVariant ExpOut(int& M_EX_seg);

    /*
    Method Inport
    */
    inline void Inport(const QString& codeline);

    /*
    Method MDIinport
    */
    inline void MDIinport(const QString& codeline);

    /*
    Method Setsegnow
    */
    inline void Setsegnow(int M_SE_i);

    /*
    Method ShowOut
    */
    inline QVariant ShowOut(int M_SH_i);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT _PointBuffer : public QAxObject
{
public:
    _PointBuffer(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property head
    */
    inline int head() const; //Returns the value of head
    inline void setHead(int value); //Sets the value of the head property

    /*
    Property headf
    */
    inline int headf() const; //Returns the value of headf
    inline void setHeadf(int value); //Sets the value of the headf property

    /*
    Property tail
    */
    inline int tail() const; //Returns the value of tail
    inline void setTail(int value); //Sets the value of the tail property

    /*
    Method ControlOut
    */
    inline QVariant ControlOut(double& X, double& Y, double& Z, double& a, double& b, double& c, double& xxo, double& yyo, double& zzo, double& xe, double& ye, double& ze, double& ae, double& be, double& ce, double& xrr, double& yrr, double& zrr, double& arr, double& brr, double& crr, int& tt, int& nn, QString& txt, QStringList& mode, int& inf, int& acf, int& inf0, int& inf1, int& inf2, int& inf3, int& inf4, int& inf5, double& leng, double& sn, double& g6811, double& g6822, double& g68aa, double& hbbz, double& hbbx, double& hbby, double& dbb, double& dss, double& dann);

    /*
    Method Load
    */
    inline QVariant Load(double X, double Y, double Z, double a, double b, double c, double xxo, double yyo, double zzo, double xe, double ye, double ze, double ae, double be, double ce, double xre, double yre, double zre, double are, double bre, double cre, int segty, int segn, const QString& txt, QStringList& mode, int inf, int acf, int inf0, int inf1, int inf2, int inf3, int inf4, int inf5, double leng, double sn, double g6811, double g6822, double g68aa, double hbbz, double hbbx, double hbby, double dbb, double dss, double dann);

    /*
    Method PointBuffer
    */
    inline void PointBuffer();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT _Instruction : public QAxObject
{
public:
    _Instruction(IDispatch *subobject = 0, QAxObject *parent = 0)
    : QAxObject((IUnknown*)subobject, parent)
    {
        internalRelease();
    }

    /*
    Property head
    */
    inline int head() const; //Returns the value of head
    inline void setHead(int value); //Sets the value of the head property

    /*
    Property headf
    */
    inline int headf() const; //Returns the value of headf
    inline void setHeadf(int value); //Sets the value of the headf property

    /*
    Property tail
    */
    inline int tail() const; //Returns the value of tail
    inline void setTail(int value); //Sets the value of the tail property

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8, int M_IP_para9);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8, int M_IP_para9, int M_IP_para10);

    /*
    Method Instruction
    */
    inline void Instruction();

    /*
    Method OutputInstr
    */
    inline QVariant OutputInstr(int& M_OU_Typ, QVariantList*& M_OU_para);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// Actual coclasses
class MCCDLL_EXPORT MotionControlCard : public QAxObject
{
public:
    MotionControlCard(QObject *parent = 0)
    : QAxObject(parent)
    {
	    ComRegFlag = setControl("{27303eac-d6e0-4325-9e55-eb230ca1c6bc}");
	    if (!ComRegFlag) {
		    ComRegFlag = setControl("{CB76177F-430E-489B-B4C6-29E87A312B66}");
	    }
    }
    bool ComRegFlag = false;
    bool GetComRegFlag() { return ComRegFlag; }
    /*
    Property AutoRunFlag
    */
    inline bool AutoRunFlag() const; //Returns the value of AutoRunFlag
    inline void SetAutoRunFlag(bool value); //Sets the value of the AutoRunFlag property

    /*
    Property ClosedControlA
    */
    inline bool ClosedControlA() const; //Returns the value of ClosedControlA
    inline void SetClosedControlA(bool value); //Sets the value of the ClosedControlA property

    /*
    Property ClosedControlFlag
    */
    inline bool ClosedControlFlag() const; //Returns the value of ClosedControlFlag
    inline void SetClosedControlFlag(bool value); //Sets the value of the ClosedControlFlag property

    /*
    Property ClosedControlX
    */
    inline bool ClosedControlX() const; //Returns the value of ClosedControlX
    inline void SetClosedControlX(bool value); //Sets the value of the ClosedControlX property

    /*
    Property ClosedControlY
    */
    inline bool ClosedControlY() const; //Returns the value of ClosedControlY
    inline void SetClosedControlY(bool value); //Sets the value of the ClosedControlY property

    /*
    Property ClosedControlZ
    */
    inline bool ClosedControlZ() const; //Returns the value of ClosedControlZ
    inline void SetClosedControlZ(bool value); //Sets the value of the ClosedControlZ property

    /*
    Property FeedBLnow
    */
    inline int FeedBLnow() const; //Returns the value of FeedBLnow
    inline void SetFeedBLnow(int value); //Sets the value of the FeedBLnow property

    /*
    Property FeedrateFlag
    */
    inline bool FeedrateFlag() const; //Returns the value of FeedrateFlag
    inline void SetFeedrateFlag(bool value); //Sets the value of the FeedrateFlag property

    /*
    Property IniPnowFlg
    */
    inline int IniPnowFlg() const; //Returns the value of IniPnowFlg
    inline void SetIniPnowFlg(int value); //Sets the value of the IniPnowFlg property

    /*
    Property StepStopFlag
    */
    inline bool StepStopFlag() const; //Returns the value of StepStopFlag
    inline void SetStepStopFlag(bool value); //Sets the value of the StepStopFlag property

    /*
    Property Version
    */
    inline QString Version() const; //Returns the value of Version
    inline void SetVersion(const QString& value); //Sets the value of the Version property

    /*
    Method CancelSpeedControl
    */
    inline void CancelSpeedControl(int AxisNum);

    /*
    Method ClearAutoText
    */
    inline void ClearAutoText();

    /*
    Method ClearBuffer
    */
    inline void ClearBuffer();

    /*
    Method GetActualF
    */
    inline int GetActualF(int Typ);

    /*
    Method GetActualMachineCoordinate
    */
    inline double GetActualMachineCoordinate(int Typ);

    /*
    Method GetCodeLength
    */
    inline int GetCodeLength();

    /*
    Method GetCodeRunNow
    */
    inline QString GetCodeRunNow();

    /*
    Method GetCodeRunNow
    */
    inline QString GetCodeRunNow(int& p);

    /*
    Method GetFvalue
    */
    inline int GetFvalue();

    /*
    Method GetFvalue
    */
    inline int GetFvalue(int& n);

    /*
    Method GetGmode
    */
    inline QString GetGmode(int n);

    /*
    Method GetIOin
    */
    inline int GetIOin(int num);

    /*
    Method GetIOout
    */
    inline int GetIOout(int num);

    /*
    Method GetMachineCoordinate
    */
    inline double GetMachineCoordinate(int Typ);

    /*
    Method GetMultiple
    */
    inline int GetMultiple(int Typ);

    /*
    Method GetParameterText
    */
    inline QString GetParameterText(int num);

    /*
    Method GetParameterValue
    */
    inline double GetParameterValue(int num);

    /*
    Method GetRefCoordinate
    */
    inline double GetRefCoordinate(int Typ);

    /*
    Method GetSpindleInformation
    */
    inline int GetSpindleInformation(int Typ);

    /*
    Method GetWorkMode
    */
    inline int GetWorkMode();

    /*
    Method GetWorkState
    */
    inline int GetWorkState();

    /*
    Method GetWorkpieceCoordinate
    */
    inline double GetWorkpieceCoordinate(int Typ);

    /*
    Method Ini_card
    */
    inline void Ini_card();

    /*
    Method Move_XY
    */
    inline void Move_XY(int axis, int valu);

    /*
    Method OpenProgram
    */
    inline void OpenProgram(QString& FileName);

    /*
    Method Open_ParaForm
    */
    inline void Open_ParaForm();

    /*
    Method Open_ParaForm
    */
    inline void Open_ParaForm(int n);

    /*
    Method SaveParameterValue
    */
    inline void SaveParameterValue();

    /*
    Method SendAutoText
    */
    inline void SendAutoText(QString& code);

    /*
    Method SendMDItext
    */
    inline void SendMDItext(QString& txt);

    /*
    Method SetFeedrateMultiple
    */
    inline void SetFeedrateMultiple(int Typ);

    /*
    Method SetIOout
    */
    inline void SetIOout(int num, int value);

    /*
    Method SetInitialPosition
    */
    inline void SetInitialPosition();

    /*
    Method SetParameter
    */
    inline void SetParameter(int num, double value, const QString& txt);

    /*
    Method SetParameterValue
    */
    inline void SetParameterValue(int num, double value);

    /*
    Method SetSeekZero
    */
    inline void SetSeekZero(int AxisNum);

    /*
    Method SetSeekZero
    */
    inline void SetSeekZero(int AxisNum, double& Baizhen);

    /*
    Method SetSpeedControl
    */
    inline void SetSpeedControl(int AxisNum, int Speed);

    /*
    Method SetSpindleMultiple
    */
    inline void SetSpindleMultiple(int Typ);

    /*
    Method SetSpindleRotate
    */
    inline void SetSpindleRotate(int SPR);

    /*
    Method SetStartline
    */
    inline void SetStartline(int& L);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT Explain : public QAxObject
{
public:
    Explain(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{0211e17c-fd62-49a0-a525-ab32439cdfc8}");
    }

    /*
    Property Fchflg
    */
    inline int Fchflg() const; //Returns the value of Fchflg
    inline void SetFchflg(int value); //Sets the value of the Fchflg property

    /*
    Property Fchflg2
    */
    inline int Fchflg2() const; //Returns the value of Fchflg2
    inline void SetFchflg2(int value); //Sets the value of the Fchflg2 property

    /*
    Property JumpFlg
    */
    inline int JumpFlg() const; //Returns the value of JumpFlg
    inline void SetJumpFlg(int value); //Sets the value of the JumpFlg property

    /*
    Property KongF
    */
    inline int KongF() const; //Returns the value of KongF
    inline void SetKongF(int value); //Sets the value of the KongF property

    /*
    Property VarChFlg
    */
    inline int VarChFlg() const; //Returns the value of VarChFlg
    inline void SetVarChFlg(int value); //Sets the value of the VarChFlg property

    /*
    Method Expl
    */
    inline void Expl();

    /*
    Method Export
    */
    inline QVariant Export(int& M_EO_Type, int& M_EO_num, int& M_EO_F, int& M_EO_F0, int& M_EO_F1, int& M_EO_F2, int& M_EO_F3, int& M_EO_F4, int& M_EO_F5, double& M_EO_x0, double& M_EO_y0, double& M_EO_z0, double& M_EO_a0, double& M_EO_b0, double& M_EO_c0, double& M_EO_x1, double& M_EO_y1, double& M_EO_z1, double& M_EO_a1, double& M_EO_b1, double& M_EO_c1, double& M_EO_ox, double& M_EO_oy, double& M_EO_oz, double& M_EO_xr, double& M_EO_yr, double& M_EO_zr, double& M_EO_ar, double& M_EO_br, double& M_EO_cr, QString& M_EO_txt, QStringList& M_EO_mode1, double& M_EO_G6801, double& M_EO_G6802, double& M_EO_G68ang, double& M_EO_hbbz, double& M_EO_hbbx, double& M_EO_hbby, double& M_EO_dbb, double& M_EO_dss, double& M_EO_dann);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT Interpolator : public QAxObject
{
public:
    Interpolator(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{121cdd87-649d-4bfa-9df8-53d9b1280adb}");
    }

    /*
    Property Acce
    */
    inline double Acce() const; //Returns the value of Acce
    inline void SetAcce(double value); //Sets the value of the Acce property

    /*
    Property CHxsh
    */
    inline double CHxsh() const; //Returns the value of CHxsh
    inline void SetCHxsh(double value); //Sets the value of the CHxsh property

    /*
    Property F_bl
    */
    inline int F_bl() const; //Returns the value of F_bl
    inline void SetF_bl(int value); //Sets the value of the F_bl property

    /*
    Property G0F_bl
    */
    inline int G0F_bl() const; //Returns the value of G0F_bl
    inline void SetG0F_bl(int value); //Sets the value of the G0F_bl property

    /*
    Property Jerk
    */
    inline double Jerk() const; //Returns the value of Jerk
    inline void SetJerk(double value); //Sets the value of the Jerk property

    /*
    Property PointNum
    */
    inline int PointNum() const; //Returns the value of PointNum
    inline void SetPointNum(int value); //Sets the value of the PointNum property

    /*
    Property SSegFlg
    */
    inline int SSegFlg() const; //Returns the value of SSegFlg
    inline void SetSSegFlg(int value); //Sets the value of the SSegFlg property

    /*
    Property SegEndnum
    */
    inline int SegEndnum() const; //Returns the value of SegEndnum
    inline void SetSegEndnum(int value); //Sets the value of the SegEndnum property

    /*
    Method Cal_arc
    */
    inline double Cal_arc(int M_CA_seg, int M_CA_typ, int M_CA_pla, double& M_CA_xp, double& M_CA_yp, double& M_CA_zp, double M_CA_x0, double M_CA_y0, double M_CA_z0, double M_CA_xx1, double M_CA_yy1, double M_CA_zz1, double M_CA_ox, double M_CA_oy, double M_CA_oz);

    /*
    Method Cal_cos
    */
    inline double Cal_cos(double& M_CC_xp, double& M_CC_yp, double& M_CC_zp, double& M_CC_ap, double& M_CC_bp, double& M_CC_cp, double M_CC_x1, double M_CC_y1, double M_CC_z1, double M_CC_a1, double M_CC_b1, double M_CC_c1, double x0, double y0, double z0, double a0, double b0, double c0);

    /*
    Method Cal_s
    */
    inline double Cal_s(int M_CS_i, double M_CS_vb, double M_CS_ve);

    /*
    Method Calculate
    */
    inline void Calculate();

    /*
    Method Interpolation
    */
    inline void Interpolation();

    /*
    Method Pretreat
    */
    inline void Pretreat();

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT Gincode : public QAxObject
{
public:
    Gincode(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{4a3a8617-9207-401a-8077-2a3eadb87463}");
    }

    /*
    Property length
    */
    inline int length() const; //Returns the value of length
    inline void setLength(int value); //Sets the value of the length property

    /*
    Method BaseCode
    */
    inline void BaseCode();

    /*
    Method DealM98
    */
    inline void DealM98(int num, int n0, int n1, int p);

    /*
    Method ExpOut
    */
    inline QVariant ExpOut(int& M_EX_seg);

    /*
    Method Inport
    */
    inline void Inport(const QString& codeline);

    /*
    Method MDIinport
    */
    inline void MDIinport(const QString& codeline);

    /*
    Method Setsegnow
    */
    inline void Setsegnow(int M_SE_i);

    /*
    Method ShowOut
    */
    inline QVariant ShowOut(int M_SH_i);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT PointBuffer : public QAxObject
{
public:
    PointBuffer(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{3bd23ce8-34ca-49a0-bcb3-abadda31c701}");
    }

    /*
    Property head
    */
    inline int head() const; //Returns the value of head
    inline void setHead(int value); //Sets the value of the head property

    /*
    Property headf
    */
    inline int headf() const; //Returns the value of headf
    inline void setHeadf(int value); //Sets the value of the headf property

    /*
    Property tail
    */
    inline int tail() const; //Returns the value of tail
    inline void setTail(int value); //Sets the value of the tail property

    /*
    Method ControlOut
    */
    inline QVariant ControlOut(double& X, double& Y, double& Z, double& a, double& b, double& c, double& xxo, double& yyo, double& zzo, double& xe, double& ye, double& ze, double& ae, double& be, double& ce, double& xrr, double& yrr, double& zrr, double& arr, double& brr, double& crr, int& tt, int& nn, QString& txt, QStringList& mode, int& inf, int& acf, int& inf0, int& inf1, int& inf2, int& inf3, int& inf4, int& inf5, double& leng, double& sn, double& g6811, double& g6822, double& g68aa, double& hbbz, double& hbbx, double& hbby, double& dbb, double& dss, double& dann);

    /*
    Method Load
    */
    inline QVariant Load(double X, double Y, double Z, double a, double b, double c, double xxo, double yyo, double zzo, double xe, double ye, double ze, double ae, double be, double ce, double xre, double yre, double zre, double are, double bre, double cre, int segty, int segn, const QString& txt, QStringList& mode, int inf, int acf, int inf0, int inf1, int inf2, int inf3, int inf4, int inf5, double leng, double sn, double g6811, double g6822, double g68aa, double hbbz, double hbbx, double hbby, double dbb, double dss, double dann);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

class MCCDLL_EXPORT Instruction : public QAxObject
{
public:
    Instruction(QObject *parent = 0)
    : QAxObject(parent)
    {
        setControl("{29e4bf3d-b327-4de9-a464-e2b22a1631d8}");
    }

    /*
    Property head
    */
    inline int head() const; //Returns the value of head
    inline void setHead(int value); //Sets the value of the head property

    /*
    Property headf
    */
    inline int headf() const; //Returns the value of headf
    inline void setHeadf(int value); //Sets the value of the headf property

    /*
    Property tail
    */
    inline int tail() const; //Returns the value of tail
    inline void setTail(int value); //Sets the value of the tail property

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8, int M_IP_para9);

    /*
    Method InputInstr
    */
    inline int InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8, int M_IP_para9, int M_IP_para10);

    /*
    Method OutputInstr
    */
    inline QVariant OutputInstr(int& M_OU_Typ, QVariantList*& M_OU_para);

// meta object functions
    static const QMetaObject staticMetaObject;
    virtual const QMetaObject *metaObject() const { return &staticMetaObject; }
    virtual void *qt_metacast(const char *);
};

// member function implementation
#ifndef QAX_DUMPCPP_MCCDLL_NOINLINES
inline bool _MotionControlCard::AutoRunFlag() const
{
    QVariant qax_result = property("AutoRunFlag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MotionControlCard::SetAutoRunFlag(bool value){ setProperty("AutoRunFlag", QVariant(value)); }

inline bool _MotionControlCard::ClosedControlA() const
{
    QVariant qax_result = property("ClosedControlA");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MotionControlCard::SetClosedControlA(bool value){ setProperty("ClosedControlA", QVariant(value)); }

inline bool _MotionControlCard::ClosedControlFlag() const
{
    QVariant qax_result = property("ClosedControlFlag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MotionControlCard::SetClosedControlFlag(bool value){ setProperty("ClosedControlFlag", QVariant(value)); }

inline bool _MotionControlCard::ClosedControlX() const
{
    QVariant qax_result = property("ClosedControlX");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MotionControlCard::SetClosedControlX(bool value){ setProperty("ClosedControlX", QVariant(value)); }

inline bool _MotionControlCard::ClosedControlY() const
{
    QVariant qax_result = property("ClosedControlY");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MotionControlCard::SetClosedControlY(bool value){ setProperty("ClosedControlY", QVariant(value)); }

inline bool _MotionControlCard::ClosedControlZ() const
{
    QVariant qax_result = property("ClosedControlZ");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MotionControlCard::SetClosedControlZ(bool value){ setProperty("ClosedControlZ", QVariant(value)); }

inline int _MotionControlCard::FeedBLnow() const
{
    QVariant qax_result = property("FeedBLnow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _MotionControlCard::SetFeedBLnow(int value){ setProperty("FeedBLnow", QVariant(value)); }

inline bool _MotionControlCard::FeedrateFlag() const
{
    QVariant qax_result = property("FeedrateFlag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MotionControlCard::SetFeedrateFlag(bool value){ setProperty("FeedrateFlag", QVariant(value)); }

inline int _MotionControlCard::IniPnowFlg() const
{
    QVariant qax_result = property("IniPnowFlg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _MotionControlCard::SetIniPnowFlg(int value){ setProperty("IniPnowFlg", QVariant(value)); }

inline bool _MotionControlCard::StepStopFlag() const
{
    QVariant qax_result = property("StepStopFlag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void _MotionControlCard::SetStepStopFlag(bool value){ setProperty("StepStopFlag", QVariant(value)); }

inline QString _MotionControlCard::Version() const
{
    QVariant qax_result = property("Version");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void _MotionControlCard::SetVersion(const QString& value){ setProperty("Version", QVariant(value)); }

inline void _MotionControlCard::CancelSpeedControl(int AxisNum)
{
    void *_a[] = {0, (void*)&AxisNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _MotionControlCard::ClearAutoText()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void _MotionControlCard::ClearBuffer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline int _MotionControlCard::GetActualF(int Typ)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline double _MotionControlCard::GetActualMachineCoordinate(int Typ)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int _MotionControlCard::GetCodeLength()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QString _MotionControlCard::GetCodeRunNow()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QString _MotionControlCard::GetCodeRunNow(int& p)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&p};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int _MotionControlCard::GetFvalue()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int _MotionControlCard::GetFvalue(int& n)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&n};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QString _MotionControlCard::GetGmode(int n)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&n};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int _MotionControlCard::GetIOin(int num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int _MotionControlCard::GetIOout(int num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline double _MotionControlCard::GetMachineCoordinate(int Typ)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int _MotionControlCard::GetMultiple(int Typ)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline QString _MotionControlCard::GetParameterText(int num)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline double _MotionControlCard::GetParameterValue(int num)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline double _MotionControlCard::GetRefCoordinate(int Typ)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int _MotionControlCard::GetSpindleInformation(int Typ)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int _MotionControlCard::GetWorkMode()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int _MotionControlCard::GetWorkState()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline double _MotionControlCard::GetWorkpieceCoordinate(int Typ)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void _MotionControlCard::Ini_card()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void _MotionControlCard::Move_XY(int axis, int valu)
{
    void *_a[] = {0, (void*)&axis, (void*)&valu};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void _MotionControlCard::OpenProgram(QString& FileName)
{
    void *_a[] = {0, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void _MotionControlCard::Open_ParaForm()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void _MotionControlCard::Open_ParaForm(int n)
{
    void *_a[] = {0, (void*)&n};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void _MotionControlCard::SaveParameterValue()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void _MotionControlCard::SendAutoText(QString& code)
{
    void *_a[] = {0, (void*)&code};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void _MotionControlCard::SendMDItext(QString& txt)
{
    void *_a[] = {0, (void*)&txt};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void _MotionControlCard::SetFeedrateMultiple(int Typ)
{
    void *_a[] = {0, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void _MotionControlCard::SetIOout(int num, int value)
{
    void *_a[] = {0, (void*)&num, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void _MotionControlCard::SetInitialPosition()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void _MotionControlCard::SetParameter(int num, double value, const QString& txt)
{
    void *_a[] = {0, (void*)&num, (void*)&value, (void*)&txt};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void _MotionControlCard::SetParameterValue(int num, double value)
{
    void *_a[] = {0, (void*)&num, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void _MotionControlCard::SetSeekZero(int AxisNum)
{
    void *_a[] = {0, (void*)&AxisNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void _MotionControlCard::SetSeekZero(int AxisNum, double& Baizhen)
{
    void *_a[] = {0, (void*)&AxisNum, (void*)&Baizhen};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void _MotionControlCard::SetSpeedControl(int AxisNum, int Speed)
{
    void *_a[] = {0, (void*)&AxisNum, (void*)&Speed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline void _MotionControlCard::SetSpindleMultiple(int Typ)
{
    void *_a[] = {0, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline void _MotionControlCard::SetSpindleRotate(int SPR)
{
    void *_a[] = {0, (void*)&SPR};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
}

inline void _MotionControlCard::SetStartline(int& L)
{
    void *_a[] = {0, (void*)&L};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
}


inline bool MotionControlCard::AutoRunFlag() const
{
    QVariant qax_result = property("AutoRunFlag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MotionControlCard::SetAutoRunFlag(bool value){ setProperty("AutoRunFlag", QVariant(value)); }

inline bool MotionControlCard::ClosedControlA() const
{
    QVariant qax_result = property("ClosedControlA");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MotionControlCard::SetClosedControlA(bool value){ setProperty("ClosedControlA", QVariant(value)); }

inline bool MotionControlCard::ClosedControlFlag() const
{
    QVariant qax_result = property("ClosedControlFlag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MotionControlCard::SetClosedControlFlag(bool value){ setProperty("ClosedControlFlag", QVariant(value)); }

inline bool MotionControlCard::ClosedControlX() const
{
    QVariant qax_result = property("ClosedControlX");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MotionControlCard::SetClosedControlX(bool value){ setProperty("ClosedControlX", QVariant(value)); }

inline bool MotionControlCard::ClosedControlY() const
{
    QVariant qax_result = property("ClosedControlY");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MotionControlCard::SetClosedControlY(bool value){ setProperty("ClosedControlY", QVariant(value)); }

inline bool MotionControlCard::ClosedControlZ() const
{
    QVariant qax_result = property("ClosedControlZ");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MotionControlCard::SetClosedControlZ(bool value){ setProperty("ClosedControlZ", QVariant(value)); }

inline int MotionControlCard::FeedBLnow() const
{
    QVariant qax_result = property("FeedBLnow");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void MotionControlCard::SetFeedBLnow(int value){ setProperty("FeedBLnow", QVariant(value)); }

inline bool MotionControlCard::FeedrateFlag() const
{
    QVariant qax_result = property("FeedrateFlag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MotionControlCard::SetFeedrateFlag(bool value){ setProperty("FeedrateFlag", QVariant(value)); }

inline int MotionControlCard::IniPnowFlg() const
{
    QVariant qax_result = property("IniPnowFlg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void MotionControlCard::SetIniPnowFlg(int value){ setProperty("IniPnowFlg", QVariant(value)); }

inline bool MotionControlCard::StepStopFlag() const
{
    QVariant qax_result = property("StepStopFlag");
    Q_ASSERT(qax_result.isValid());
    return *(bool*)qax_result.constData();
}
inline void MotionControlCard::SetStepStopFlag(bool value){ setProperty("StepStopFlag", QVariant(value)); }

inline QString MotionControlCard::Version() const
{
    QVariant qax_result = property("Version");
    Q_ASSERT(qax_result.isValid());
    return *(QString*)qax_result.constData();
}
inline void MotionControlCard::SetVersion(const QString& value){ setProperty("Version", QVariant(value)); }

inline void MotionControlCard::CancelSpeedControl(int AxisNum)
{
    void *_a[] = {0, (void*)&AxisNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void MotionControlCard::ClearAutoText()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline void MotionControlCard::ClearBuffer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}

inline int MotionControlCard::GetActualF(int Typ)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline double MotionControlCard::GetActualMachineCoordinate(int Typ)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int MotionControlCard::GetCodeLength()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QString MotionControlCard::GetCodeRunNow()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QString MotionControlCard::GetCodeRunNow(int& p)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&p};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int MotionControlCard::GetFvalue()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int MotionControlCard::GetFvalue(int& n)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&n};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline QString MotionControlCard::GetGmode(int n)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&n};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int MotionControlCard::GetIOin(int num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int MotionControlCard::GetIOout(int num)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline double MotionControlCard::GetMachineCoordinate(int Typ)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int MotionControlCard::GetMultiple(int Typ)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline QString MotionControlCard::GetParameterText(int num)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline double MotionControlCard::GetParameterValue(int num)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&num};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline double MotionControlCard::GetRefCoordinate(int Typ)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int MotionControlCard::GetSpindleInformation(int Typ)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int MotionControlCard::GetWorkMode()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int MotionControlCard::GetWorkState()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline double MotionControlCard::GetWorkpieceCoordinate(int Typ)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline void MotionControlCard::Ini_card()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
}

inline void MotionControlCard::Move_XY(int axis, int valu)
{
    void *_a[] = {0, (void*)&axis, (void*)&valu};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
}

inline void MotionControlCard::OpenProgram(QString& FileName)
{
    void *_a[] = {0, (void*)&FileName};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
}

inline void MotionControlCard::Open_ParaForm()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
}

inline void MotionControlCard::Open_ParaForm(int n)
{
    void *_a[] = {0, (void*)&n};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
}

inline void MotionControlCard::SaveParameterValue()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
}

inline void MotionControlCard::SendAutoText(QString& code)
{
    void *_a[] = {0, (void*)&code};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
}

inline void MotionControlCard::SendMDItext(QString& txt)
{
    void *_a[] = {0, (void*)&txt};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
}

inline void MotionControlCard::SetFeedrateMultiple(int Typ)
{
    void *_a[] = {0, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
}

inline void MotionControlCard::SetIOout(int num, int value)
{
    void *_a[] = {0, (void*)&num, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
}

inline void MotionControlCard::SetInitialPosition()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
}

inline void MotionControlCard::SetParameter(int num, double value, const QString& txt)
{
    void *_a[] = {0, (void*)&num, (void*)&value, (void*)&txt};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
}

inline void MotionControlCard::SetParameterValue(int num, double value)
{
    void *_a[] = {0, (void*)&num, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
}

inline void MotionControlCard::SetSeekZero(int AxisNum)
{
    void *_a[] = {0, (void*)&AxisNum};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
}

inline void MotionControlCard::SetSeekZero(int AxisNum, double& Baizhen)
{
    void *_a[] = {0, (void*)&AxisNum, (void*)&Baizhen};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
}

inline void MotionControlCard::SetSpeedControl(int AxisNum, int Speed)
{
    void *_a[] = {0, (void*)&AxisNum, (void*)&Speed};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
}

inline void MotionControlCard::SetSpindleMultiple(int Typ)
{
    void *_a[] = {0, (void*)&Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
}

inline void MotionControlCard::SetSpindleRotate(int SPR)
{
    void *_a[] = {0, (void*)&SPR};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
}

inline void MotionControlCard::SetStartline(int& L)
{
    void *_a[] = {0, (void*)&L};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
}


inline int _Explain::Fchflg() const
{
    QVariant qax_result = property("Fchflg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Explain::SetFchflg(int value){ setProperty("Fchflg", QVariant(value)); }

inline int _Explain::Fchflg2() const
{
    QVariant qax_result = property("Fchflg2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Explain::SetFchflg2(int value){ setProperty("Fchflg2", QVariant(value)); }

inline int _Explain::JumpFlg() const
{
    QVariant qax_result = property("JumpFlg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Explain::SetJumpFlg(int value){ setProperty("JumpFlg", QVariant(value)); }

inline int _Explain::KongF() const
{
    QVariant qax_result = property("KongF");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Explain::SetKongF(int value){ setProperty("KongF", QVariant(value)); }

inline int _Explain::VarChFlg() const
{
    QVariant qax_result = property("VarChFlg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Explain::SetVarChFlg(int value){ setProperty("VarChFlg", QVariant(value)); }

inline void _Explain::Expl()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _Explain::Explain(double X, double Y, double Z, double a, double b, double c, double ox, double oy, double oz, double xend, double yend, double zend, double aend, double bend, double cend, double xr, double yr, double zr, double ar, double br, double cr, int Typ, int num, const QString& text, QStringList& mode, int CF, int af, int f0, int F1, int F2, int F3, int F4, int F5, int acc, double L, double Snow, double g68an, double G681, double G682, double Hbx, double Hby, double Hbz, double Db, double Ds, double Dan)
{
    void *_a[] = {0, (void*)&X, (void*)&Y, (void*)&Z, (void*)&a, (void*)&b, (void*)&c, (void*)&ox, (void*)&oy, (void*)&oz, (void*)&xend, (void*)&yend, (void*)&zend, (void*)&aend, (void*)&bend, (void*)&cend, (void*)&xr, (void*)&yr, (void*)&zr, (void*)&ar, (void*)&br, (void*)&cr, (void*)&Typ, (void*)&num, (void*)&text, (void*)&mode, (void*)&CF, (void*)&af, (void*)&f0, (void*)&F1, (void*)&F2, (void*)&F3, (void*)&F4, (void*)&F5, (void*)&acc, (void*)&L, (void*)&Snow, (void*)&g68an, (void*)&G681, (void*)&G682, (void*)&Hbx, (void*)&Hby, (void*)&Hbz, (void*)&Db, (void*)&Ds, (void*)&Dan};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline QVariant _Explain::Export(int& M_EO_Type, int& M_EO_num, int& M_EO_F, int& M_EO_F0, int& M_EO_F1, int& M_EO_F2, int& M_EO_F3, int& M_EO_F4, int& M_EO_F5, double& M_EO_x0, double& M_EO_y0, double& M_EO_z0, double& M_EO_a0, double& M_EO_b0, double& M_EO_c0, double& M_EO_x1, double& M_EO_y1, double& M_EO_z1, double& M_EO_a1, double& M_EO_b1, double& M_EO_c1, double& M_EO_ox, double& M_EO_oy, double& M_EO_oz, double& M_EO_xr, double& M_EO_yr, double& M_EO_zr, double& M_EO_ar, double& M_EO_br, double& M_EO_cr, QString& M_EO_txt, QStringList& M_EO_mode1, double& M_EO_G6801, double& M_EO_G6802, double& M_EO_G68ang, double& M_EO_hbbz, double& M_EO_hbbx, double& M_EO_hbby, double& M_EO_dbb, double& M_EO_dss, double& M_EO_dann)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_EO_Type, (void*)&M_EO_num, (void*)&M_EO_F, (void*)&M_EO_F0, (void*)&M_EO_F1, (void*)&M_EO_F2, (void*)&M_EO_F3, (void*)&M_EO_F4, (void*)&M_EO_F5, (void*)&M_EO_x0, (void*)&M_EO_y0, (void*)&M_EO_z0, (void*)&M_EO_a0, (void*)&M_EO_b0, (void*)&M_EO_c0, (void*)&M_EO_x1, (void*)&M_EO_y1, (void*)&M_EO_z1, (void*)&M_EO_a1, (void*)&M_EO_b1, (void*)&M_EO_c1, (void*)&M_EO_ox, (void*)&M_EO_oy, (void*)&M_EO_oz, (void*)&M_EO_xr, (void*)&M_EO_yr, (void*)&M_EO_zr, (void*)&M_EO_ar, (void*)&M_EO_br, (void*)&M_EO_cr, (void*)&M_EO_txt, (void*)&M_EO_mode1, (void*)&M_EO_G6801, (void*)&M_EO_G6802, (void*)&M_EO_G68ang, (void*)&M_EO_hbbz, (void*)&M_EO_hbbx, (void*)&M_EO_hbby, (void*)&M_EO_dbb, (void*)&M_EO_dss, (void*)&M_EO_dann};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}


inline int Explain::Fchflg() const
{
    QVariant qax_result = property("Fchflg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Explain::SetFchflg(int value){ setProperty("Fchflg", QVariant(value)); }

inline int Explain::Fchflg2() const
{
    QVariant qax_result = property("Fchflg2");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Explain::SetFchflg2(int value){ setProperty("Fchflg2", QVariant(value)); }

inline int Explain::JumpFlg() const
{
    QVariant qax_result = property("JumpFlg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Explain::SetJumpFlg(int value){ setProperty("JumpFlg", QVariant(value)); }

inline int Explain::KongF() const
{
    QVariant qax_result = property("KongF");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Explain::SetKongF(int value){ setProperty("KongF", QVariant(value)); }

inline int Explain::VarChFlg() const
{
    QVariant qax_result = property("VarChFlg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Explain::SetVarChFlg(int value){ setProperty("VarChFlg", QVariant(value)); }

inline void Explain::Expl()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline QVariant Explain::Export(int& M_EO_Type, int& M_EO_num, int& M_EO_F, int& M_EO_F0, int& M_EO_F1, int& M_EO_F2, int& M_EO_F3, int& M_EO_F4, int& M_EO_F5, double& M_EO_x0, double& M_EO_y0, double& M_EO_z0, double& M_EO_a0, double& M_EO_b0, double& M_EO_c0, double& M_EO_x1, double& M_EO_y1, double& M_EO_z1, double& M_EO_a1, double& M_EO_b1, double& M_EO_c1, double& M_EO_ox, double& M_EO_oy, double& M_EO_oz, double& M_EO_xr, double& M_EO_yr, double& M_EO_zr, double& M_EO_ar, double& M_EO_br, double& M_EO_cr, QString& M_EO_txt, QStringList& M_EO_mode1, double& M_EO_G6801, double& M_EO_G6802, double& M_EO_G68ang, double& M_EO_hbbz, double& M_EO_hbbx, double& M_EO_hbby, double& M_EO_dbb, double& M_EO_dss, double& M_EO_dann)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_EO_Type, (void*)&M_EO_num, (void*)&M_EO_F, (void*)&M_EO_F0, (void*)&M_EO_F1, (void*)&M_EO_F2, (void*)&M_EO_F3, (void*)&M_EO_F4, (void*)&M_EO_F5, (void*)&M_EO_x0, (void*)&M_EO_y0, (void*)&M_EO_z0, (void*)&M_EO_a0, (void*)&M_EO_b0, (void*)&M_EO_c0, (void*)&M_EO_x1, (void*)&M_EO_y1, (void*)&M_EO_z1, (void*)&M_EO_a1, (void*)&M_EO_b1, (void*)&M_EO_c1, (void*)&M_EO_ox, (void*)&M_EO_oy, (void*)&M_EO_oz, (void*)&M_EO_xr, (void*)&M_EO_yr, (void*)&M_EO_zr, (void*)&M_EO_ar, (void*)&M_EO_br, (void*)&M_EO_cr, (void*)&M_EO_txt, (void*)&M_EO_mode1, (void*)&M_EO_G6801, (void*)&M_EO_G6802, (void*)&M_EO_G68ang, (void*)&M_EO_hbbz, (void*)&M_EO_hbbx, (void*)&M_EO_hbby, (void*)&M_EO_dbb, (void*)&M_EO_dss, (void*)&M_EO_dann};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}


inline double _Interpolator::Acce() const
{
    QVariant qax_result = property("Acce");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _Interpolator::SetAcce(double value){ setProperty("Acce", QVariant(value)); }

inline double _Interpolator::CHxsh() const
{
    QVariant qax_result = property("CHxsh");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _Interpolator::SetCHxsh(double value){ setProperty("CHxsh", QVariant(value)); }

inline int _Interpolator::F_bl() const
{
    QVariant qax_result = property("F_bl");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Interpolator::SetF_bl(int value){ setProperty("F_bl", QVariant(value)); }

inline int _Interpolator::G0F_bl() const
{
    QVariant qax_result = property("G0F_bl");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Interpolator::SetG0F_bl(int value){ setProperty("G0F_bl", QVariant(value)); }

inline double _Interpolator::Jerk() const
{
    QVariant qax_result = property("Jerk");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void _Interpolator::SetJerk(double value){ setProperty("Jerk", QVariant(value)); }

inline int _Interpolator::PointNum() const
{
    QVariant qax_result = property("PointNum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Interpolator::SetPointNum(int value){ setProperty("PointNum", QVariant(value)); }

inline int _Interpolator::SSegFlg() const
{
    QVariant qax_result = property("SSegFlg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Interpolator::SetSSegFlg(int value){ setProperty("SSegFlg", QVariant(value)); }

inline int _Interpolator::SegEndnum() const
{
    QVariant qax_result = property("SegEndnum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Interpolator::SetSegEndnum(int value){ setProperty("SegEndnum", QVariant(value)); }

inline double _Interpolator::Cal_arc(int M_CA_seg, int M_CA_typ, int M_CA_pla, double& M_CA_xp, double& M_CA_yp, double& M_CA_zp, double M_CA_x0, double M_CA_y0, double M_CA_z0, double M_CA_xx1, double M_CA_yy1, double M_CA_zz1, double M_CA_ox, double M_CA_oy, double M_CA_oz)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_CA_seg, (void*)&M_CA_typ, (void*)&M_CA_pla, (void*)&M_CA_xp, (void*)&M_CA_yp, (void*)&M_CA_zp, (void*)&M_CA_x0, (void*)&M_CA_y0, (void*)&M_CA_z0, (void*)&M_CA_xx1, (void*)&M_CA_yy1, (void*)&M_CA_zz1, (void*)&M_CA_ox, (void*)&M_CA_oy, (void*)&M_CA_oz};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline double _Interpolator::Cal_cos(double& M_CC_xp, double& M_CC_yp, double& M_CC_zp, double& M_CC_ap, double& M_CC_bp, double& M_CC_cp, double M_CC_x1, double M_CC_y1, double M_CC_z1, double M_CC_a1, double M_CC_b1, double M_CC_c1, double x0, double y0, double z0, double a0, double b0, double c0)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_CC_xp, (void*)&M_CC_yp, (void*)&M_CC_zp, (void*)&M_CC_ap, (void*)&M_CC_bp, (void*)&M_CC_cp, (void*)&M_CC_x1, (void*)&M_CC_y1, (void*)&M_CC_z1, (void*)&M_CC_a1, (void*)&M_CC_b1, (void*)&M_CC_c1, (void*)&x0, (void*)&y0, (void*)&z0, (void*)&a0, (void*)&b0, (void*)&c0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline double _Interpolator::Cal_s(int M_CS_i, double M_CS_vb, double M_CS_ve)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_CS_i, (void*)&M_CS_vb, (void*)&M_CS_ve};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _Interpolator::Calculate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _Interpolator::Interpolation()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _Interpolator::Pretreat()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}


inline double Interpolator::Acce() const
{
    QVariant qax_result = property("Acce");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void Interpolator::SetAcce(double value){ setProperty("Acce", QVariant(value)); }

inline double Interpolator::CHxsh() const
{
    QVariant qax_result = property("CHxsh");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void Interpolator::SetCHxsh(double value){ setProperty("CHxsh", QVariant(value)); }

inline int Interpolator::F_bl() const
{
    QVariant qax_result = property("F_bl");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Interpolator::SetF_bl(int value){ setProperty("F_bl", QVariant(value)); }

inline int Interpolator::G0F_bl() const
{
    QVariant qax_result = property("G0F_bl");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Interpolator::SetG0F_bl(int value){ setProperty("G0F_bl", QVariant(value)); }

inline double Interpolator::Jerk() const
{
    QVariant qax_result = property("Jerk");
    Q_ASSERT(qax_result.isValid());
    return *(double*)qax_result.constData();
}
inline void Interpolator::SetJerk(double value){ setProperty("Jerk", QVariant(value)); }

inline int Interpolator::PointNum() const
{
    QVariant qax_result = property("PointNum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Interpolator::SetPointNum(int value){ setProperty("PointNum", QVariant(value)); }

inline int Interpolator::SSegFlg() const
{
    QVariant qax_result = property("SSegFlg");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Interpolator::SetSSegFlg(int value){ setProperty("SSegFlg", QVariant(value)); }

inline int Interpolator::SegEndnum() const
{
    QVariant qax_result = property("SegEndnum");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Interpolator::SetSegEndnum(int value){ setProperty("SegEndnum", QVariant(value)); }

inline double Interpolator::Cal_arc(int M_CA_seg, int M_CA_typ, int M_CA_pla, double& M_CA_xp, double& M_CA_yp, double& M_CA_zp, double M_CA_x0, double M_CA_y0, double M_CA_z0, double M_CA_xx1, double M_CA_yy1, double M_CA_zz1, double M_CA_ox, double M_CA_oy, double M_CA_oz)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_CA_seg, (void*)&M_CA_typ, (void*)&M_CA_pla, (void*)&M_CA_xp, (void*)&M_CA_yp, (void*)&M_CA_zp, (void*)&M_CA_x0, (void*)&M_CA_y0, (void*)&M_CA_z0, (void*)&M_CA_xx1, (void*)&M_CA_yy1, (void*)&M_CA_zz1, (void*)&M_CA_ox, (void*)&M_CA_oy, (void*)&M_CA_oz};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline double Interpolator::Cal_cos(double& M_CC_xp, double& M_CC_yp, double& M_CC_zp, double& M_CC_ap, double& M_CC_bp, double& M_CC_cp, double M_CC_x1, double M_CC_y1, double M_CC_z1, double M_CC_a1, double M_CC_b1, double M_CC_c1, double x0, double y0, double z0, double a0, double b0, double c0)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_CC_xp, (void*)&M_CC_yp, (void*)&M_CC_zp, (void*)&M_CC_ap, (void*)&M_CC_bp, (void*)&M_CC_cp, (void*)&M_CC_x1, (void*)&M_CC_y1, (void*)&M_CC_z1, (void*)&M_CC_a1, (void*)&M_CC_b1, (void*)&M_CC_c1, (void*)&x0, (void*)&y0, (void*)&z0, (void*)&a0, (void*)&b0, (void*)&c0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline double Interpolator::Cal_s(int M_CS_i, double M_CS_vb, double M_CS_ve)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_CS_i, (void*)&M_CS_vb, (void*)&M_CS_ve};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void Interpolator::Calculate()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void Interpolator::Interpolation()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void Interpolator::Pretreat()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}


inline int _Gincode::length() const
{
    QVariant qax_result = property("length");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Gincode::setLength(int value){ setProperty("length", QVariant(value)); }

inline void _Gincode::BaseCode()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void _Gincode::DealM98(int num, int n0, int n1, int p)
{
    void *_a[] = {0, (void*)&num, (void*)&n0, (void*)&n1, (void*)&p};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline QVariant _Gincode::ExpOut(int& M_EX_seg)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_EX_seg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void _Gincode::Inport(const QString& codeline)
{
    void *_a[] = {0, (void*)&codeline};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void _Gincode::MDIinport(const QString& codeline)
{
    void *_a[] = {0, (void*)&codeline};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void _Gincode::Setsegnow(int M_SE_i)
{
    void *_a[] = {0, (void*)&M_SE_i};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline QVariant _Gincode::ShowOut(int M_SH_i)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_SH_i};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}


inline int Gincode::length() const
{
    QVariant qax_result = property("length");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Gincode::setLength(int value){ setProperty("length", QVariant(value)); }

inline void Gincode::BaseCode()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
}

inline void Gincode::DealM98(int num, int n0, int n1, int p)
{
    void *_a[] = {0, (void*)&num, (void*)&n0, (void*)&n1, (void*)&p};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
}

inline QVariant Gincode::ExpOut(int& M_EX_seg)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_EX_seg};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline void Gincode::Inport(const QString& codeline)
{
    void *_a[] = {0, (void*)&codeline};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
}

inline void Gincode::MDIinport(const QString& codeline)
{
    void *_a[] = {0, (void*)&codeline};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
}

inline void Gincode::Setsegnow(int M_SE_i)
{
    void *_a[] = {0, (void*)&M_SE_i};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
}

inline QVariant Gincode::ShowOut(int M_SH_i)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_SH_i};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}


inline int _PointBuffer::head() const
{
    QVariant qax_result = property("head");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _PointBuffer::setHead(int value){ setProperty("head", QVariant(value)); }

inline int _PointBuffer::headf() const
{
    QVariant qax_result = property("headf");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _PointBuffer::setHeadf(int value){ setProperty("headf", QVariant(value)); }

inline int _PointBuffer::tail() const
{
    QVariant qax_result = property("tail");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _PointBuffer::setTail(int value){ setProperty("tail", QVariant(value)); }

inline QVariant _PointBuffer::ControlOut(double& X, double& Y, double& Z, double& a, double& b, double& c, double& xxo, double& yyo, double& zzo, double& xe, double& ye, double& ze, double& ae, double& be, double& ce, double& xrr, double& yrr, double& zrr, double& arr, double& brr, double& crr, int& tt, int& nn, QString& txt, QStringList& mode, int& inf, int& acf, int& inf0, int& inf1, int& inf2, int& inf3, int& inf4, int& inf5, double& leng, double& sn, double& g6811, double& g6822, double& g68aa, double& hbbz, double& hbbx, double& hbby, double& dbb, double& dss, double& dann)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&X, (void*)&Y, (void*)&Z, (void*)&a, (void*)&b, (void*)&c, (void*)&xxo, (void*)&yyo, (void*)&zzo, (void*)&xe, (void*)&ye, (void*)&ze, (void*)&ae, (void*)&be, (void*)&ce, (void*)&xrr, (void*)&yrr, (void*)&zrr, (void*)&arr, (void*)&brr, (void*)&crr, (void*)&tt, (void*)&nn, (void*)&txt, (void*)&mode, (void*)&inf, (void*)&acf, (void*)&inf0, (void*)&inf1, (void*)&inf2, (void*)&inf3, (void*)&inf4, (void*)&inf5, (void*)&leng, (void*)&sn, (void*)&g6811, (void*)&g6822, (void*)&g68aa, (void*)&hbbz, (void*)&hbbx, (void*)&hbby, (void*)&dbb, (void*)&dss, (void*)&dann};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QVariant _PointBuffer::Load(double X, double Y, double Z, double a, double b, double c, double xxo, double yyo, double zzo, double xe, double ye, double ze, double ae, double be, double ce, double xre, double yre, double zre, double are, double bre, double cre, int segty, int segn, const QString& txt, QStringList& mode, int inf, int acf, int inf0, int inf1, int inf2, int inf3, int inf4, int inf5, double leng, double sn, double g6811, double g6822, double g68aa, double hbbz, double hbbx, double hbby, double dbb, double dss, double dann)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&X, (void*)&Y, (void*)&Z, (void*)&a, (void*)&b, (void*)&c, (void*)&xxo, (void*)&yyo, (void*)&zzo, (void*)&xe, (void*)&ye, (void*)&ze, (void*)&ae, (void*)&be, (void*)&ce, (void*)&xre, (void*)&yre, (void*)&zre, (void*)&are, (void*)&bre, (void*)&cre, (void*)&segty, (void*)&segn, (void*)&txt, (void*)&mode, (void*)&inf, (void*)&acf, (void*)&inf0, (void*)&inf1, (void*)&inf2, (void*)&inf3, (void*)&inf4, (void*)&inf5, (void*)&leng, (void*)&sn, (void*)&g6811, (void*)&g6822, (void*)&g68aa, (void*)&hbbz, (void*)&hbbx, (void*)&hbby, (void*)&dbb, (void*)&dss, (void*)&dann};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline void _PointBuffer::PointBuffer()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
}


inline int PointBuffer::head() const
{
    QVariant qax_result = property("head");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void PointBuffer::setHead(int value){ setProperty("head", QVariant(value)); }

inline int PointBuffer::headf() const
{
    QVariant qax_result = property("headf");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void PointBuffer::setHeadf(int value){ setProperty("headf", QVariant(value)); }

inline int PointBuffer::tail() const
{
    QVariant qax_result = property("tail");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void PointBuffer::setTail(int value){ setProperty("tail", QVariant(value)); }

inline QVariant PointBuffer::ControlOut(double& X, double& Y, double& Z, double& a, double& b, double& c, double& xxo, double& yyo, double& zzo, double& xe, double& ye, double& ze, double& ae, double& be, double& ce, double& xrr, double& yrr, double& zrr, double& arr, double& brr, double& crr, int& tt, int& nn, QString& txt, QStringList& mode, int& inf, int& acf, int& inf0, int& inf1, int& inf2, int& inf3, int& inf4, int& inf5, double& leng, double& sn, double& g6811, double& g6822, double& g68aa, double& hbbz, double& hbbx, double& hbby, double& dbb, double& dss, double& dann)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&X, (void*)&Y, (void*)&Z, (void*)&a, (void*)&b, (void*)&c, (void*)&xxo, (void*)&yyo, (void*)&zzo, (void*)&xe, (void*)&ye, (void*)&ze, (void*)&ae, (void*)&be, (void*)&ce, (void*)&xrr, (void*)&yrr, (void*)&zrr, (void*)&arr, (void*)&brr, (void*)&crr, (void*)&tt, (void*)&nn, (void*)&txt, (void*)&mode, (void*)&inf, (void*)&acf, (void*)&inf0, (void*)&inf1, (void*)&inf2, (void*)&inf3, (void*)&inf4, (void*)&inf5, (void*)&leng, (void*)&sn, (void*)&g6811, (void*)&g6822, (void*)&g68aa, (void*)&hbbz, (void*)&hbbx, (void*)&hbby, (void*)&dbb, (void*)&dss, (void*)&dann};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline QVariant PointBuffer::Load(double X, double Y, double Z, double a, double b, double c, double xxo, double yyo, double zzo, double xe, double ye, double ze, double ae, double be, double ce, double xre, double yre, double zre, double are, double bre, double cre, int segty, int segn, const QString& txt, QStringList& mode, int inf, int acf, int inf0, int inf1, int inf2, int inf3, int inf4, int inf5, double leng, double sn, double g6811, double g6822, double g68aa, double hbbz, double hbbx, double hbby, double dbb, double dss, double dann)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&X, (void*)&Y, (void*)&Z, (void*)&a, (void*)&b, (void*)&c, (void*)&xxo, (void*)&yyo, (void*)&zzo, (void*)&xe, (void*)&ye, (void*)&ze, (void*)&ae, (void*)&be, (void*)&ce, (void*)&xre, (void*)&yre, (void*)&zre, (void*)&are, (void*)&bre, (void*)&cre, (void*)&segty, (void*)&segn, (void*)&txt, (void*)&mode, (void*)&inf, (void*)&acf, (void*)&inf0, (void*)&inf1, (void*)&inf2, (void*)&inf3, (void*)&inf4, (void*)&inf5, (void*)&leng, (void*)&sn, (void*)&g6811, (void*)&g6822, (void*)&g68aa, (void*)&hbbz, (void*)&hbbx, (void*)&hbby, (void*)&dbb, (void*)&dss, (void*)&dann};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}


inline int _Instruction::head() const
{
    QVariant qax_result = property("head");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Instruction::setHead(int value){ setProperty("head", QVariant(value)); }

inline int _Instruction::headf() const
{
    QVariant qax_result = property("headf");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Instruction::setHeadf(int value){ setProperty("headf", QVariant(value)); }

inline int _Instruction::tail() const
{
    QVariant qax_result = property("tail");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void _Instruction::setTail(int value){ setProperty("tail", QVariant(value)); }

inline int _Instruction::InputInstr(int M_IP_Typ)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6, (void*)&M_IP_para7};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6, (void*)&M_IP_para7, (void*)&M_IP_para8};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8, int M_IP_para9)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6, (void*)&M_IP_para7, (void*)&M_IP_para8, (void*)&M_IP_para9};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int _Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8, int M_IP_para9, int M_IP_para10)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6, (void*)&M_IP_para7, (void*)&M_IP_para8, (void*)&M_IP_para9, (void*)&M_IP_para10};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline void _Instruction::Instruction()
{
    void *_a[] = {0};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
}

inline QVariant _Instruction::OutputInstr(int& M_OU_Typ, QVariantList*& M_OU_para)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_OU_Typ, (void*)&M_OU_para};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}


inline int Instruction::head() const
{
    QVariant qax_result = property("head");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Instruction::setHead(int value){ setProperty("head", QVariant(value)); }

inline int Instruction::headf() const
{
    QVariant qax_result = property("headf");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Instruction::setHeadf(int value){ setProperty("headf", QVariant(value)); }

inline int Instruction::tail() const
{
    QVariant qax_result = property("tail");
    Q_ASSERT(qax_result.isValid());
    return *(int*)qax_result.constData();
}
inline void Instruction::setTail(int value){ setProperty("tail", QVariant(value)); }

inline int Instruction::InputInstr(int M_IP_Typ)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6, (void*)&M_IP_para7};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6, (void*)&M_IP_para7, (void*)&M_IP_para8};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8, int M_IP_para9)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6, (void*)&M_IP_para7, (void*)&M_IP_para8, (void*)&M_IP_para9};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int Instruction::InputInstr(int M_IP_Typ, int M_IP_para1, int M_IP_para2, int M_IP_para3, int M_IP_para4, int M_IP_para5, int M_IP_para6, int M_IP_para7, int M_IP_para8, int M_IP_para9, int M_IP_para10)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_IP_Typ, (void*)&M_IP_para1, (void*)&M_IP_para2, (void*)&M_IP_para3, (void*)&M_IP_para4, (void*)&M_IP_para5, (void*)&M_IP_para6, (void*)&M_IP_para7, (void*)&M_IP_para8, (void*)&M_IP_para9, (void*)&M_IP_para10};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline QVariant Instruction::OutputInstr(int& M_OU_Typ, QVariantList*& M_OU_para)
{
    QVariant qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&M_OU_Typ, (void*)&M_OU_para};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}



#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<mccdll::_MotionControlCard, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::_MotionControlCard*>(t)->mccdll::_MotionControlCard::~_MotionControlCard();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::_MotionControlCard;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::_MotionControlCard*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::_MotionControlCard*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::MotionControlCard, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::MotionControlCard*>(t)->mccdll::MotionControlCard::~MotionControlCard();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::MotionControlCard;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::MotionControlCard*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::MotionControlCard*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::_Explain, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::_Explain*>(t)->mccdll::_Explain::~_Explain();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::_Explain;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::_Explain*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::_Explain*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::Explain, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::Explain*>(t)->mccdll::Explain::~Explain();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::Explain;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::Explain*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::Explain*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::_Interpolator, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::_Interpolator*>(t)->mccdll::_Interpolator::~_Interpolator();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::_Interpolator;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::_Interpolator*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::_Interpolator*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::Interpolator, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::Interpolator*>(t)->mccdll::Interpolator::~Interpolator();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::Interpolator;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::Interpolator*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::Interpolator*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::_Gincode, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::_Gincode*>(t)->mccdll::_Gincode::~_Gincode();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::_Gincode;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::_Gincode*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::_Gincode*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::Gincode, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::Gincode*>(t)->mccdll::Gincode::~Gincode();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::Gincode;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::Gincode*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::Gincode*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::_PointBuffer, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::_PointBuffer*>(t)->mccdll::_PointBuffer::~_PointBuffer();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::_PointBuffer;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::_PointBuffer*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::_PointBuffer*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::PointBuffer, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::PointBuffer*>(t)->mccdll::PointBuffer::~PointBuffer();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::PointBuffer;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::PointBuffer*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::PointBuffer*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::_Instruction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::_Instruction*>(t)->mccdll::_Instruction::~_Instruction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::_Instruction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::_Instruction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::_Instruction*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<mccdll::Instruction, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<mccdll::Instruction*>(t)->mccdll::Instruction::~Instruction();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) mccdll::Instruction;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const mccdll::Instruction*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<mccdll::Instruction*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

